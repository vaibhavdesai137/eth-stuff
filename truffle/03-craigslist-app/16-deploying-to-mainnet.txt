
------------------------------------------------------------------------------------------------------------------------------

# Make sure you have geth running and connected to rinkeby network
# Follow steps mentioned in ../../16-setup-mainnet-blockchain.txt
# Come back here when local node is in sync with mainnet network

------------------------------------------------------------------------------------------------------------------------------

# Now that mainnet is all up to date on our node, we will proceed with contract deployment

# You can deploy the front end wherever you like
# For our app, since we interact with blockchain via metamask, we simply need a way to load our frontend
# We'll use github pages for that

# Create docs/ directory at the same level as src/ directory
# Invoke the script ./deploy-frontend.sh
# This will upload all necessary files to github

# Hit the url: https://vaibhavdesai137.github.io/ethereum-stuff/truffle/03-craigslist-app/docs/

------------------------------------------------------------------------------------------------------------------------------

# Now that our front end is all up to date , we will proceed with contract deployment
# Add a new network config in truffle.js
# Now with testrpc, all acounts are unlocked by default
# But for any other network, we'll have to explicitly unlock the account via geth
# By default, truffle uses the 1st account from the list to deploy the contract
# Lets unlock our only account anyway

# We'll use the 1st account to deploy the contract
> eth.accounts
["0xdb5d724d9fcd93da192cafcd3c3d89419365e943"]
> personal.unlockAccount(eth.accounts[0]);

# Our new accounts on mainnet would have 0 ETH
# Use any exchange to buy some ether and transfer it to this address
# Once some ether is available, check the balance
web3.fromWei(web3.eth.getBalance('0xdb5d724d9fcd93da192cafcd3c3d89419365e943'), "ether"); ---> 0

------------------------------------------------------------------------------------------------------------------------------

# Ok so now that we have ETH in our account, we can deploy the contract to mainnet
# Now that we have multiple networks configured in truffle.js, we'll have to specify which network we want the contract to be deployed to
# Whichever network we select, make sure geth is running connected to that network

# Without enough ethers in account, deploying will fail:
# truffle migrate --network mainnet
# Using network 'mainnet'.
# Running migration: 1_initial_migration.js
#   Deploying Migrations...
#   Migrations: ...
# Saving successful migration to network...
# Saving artifacts...
# Running migration: 2_deploy_contracts.js
#   Deploying Craigslist...
#   Craigslist: ...
# Saving successful migration to network...
# Saving artifacts...

# And since mainnet is public, the contract addresses can be validated
# Migrations: https://etherscan.io/address/...
# Craigslist: https://etherscan.io/address/...

# Now that contract is deployed:
# Verify build/contracts/Migrations.json now shows details for mainnet
# Verify build/contracts/Craigslist.json now shows details for mainnet

# Deploy the changes to frontend since Craigslist.json now has metadata for mainnet
# ./deploy-frontend.sh

------------------------------------------------------------------------------------------------------------------------------

# Check balances again to verify our account lost some ethers for deploying contract
web3.fromWei(web3.eth.getBalance('0xdb5d724d9fcd93da192cafcd3c3d89419365e943'), "ether"); ---> 0

------------------------------------------------------------------------------------------------------------------------------
